TIMER AND STOPWATCH ⏱️⏱️
CODE CLAUSE

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>

<div class="timer">
    <h1>Timer</h1>
    <p id="timer">00:00:00</p>
    <button id="startTimer">Start</button>
    <button id="pauseTimer">Pause</button>
    <button id="resetTimer">Reset</button>
  </div>
  
  <div class="stopwatch">
    <h1>Stopwatch</h1>
    <p id="stopwatch">00:00:00</p>
    <button id="startStopwatch">Start</button>
    <button id="pauseStopwatch">Pause</button>
    <button id="resetStopwatch">Reset</button>
  </div>
      <style>.timer, .stopwatch {
        text-align: center;
        margin-bottom: 20px;
      }
      
      .timer h1, .stopwatch h1 {
        font-size: 24px;
      }
      
      .timer p, .stopwatch p {
        font-size: 48px;
        font-weight: bold;
        margin: 10px;
      }
      
      button {
        font-size: 16px;
        padding: 8px 16px;
        margin: 5px;
      }
      </style>
      <script>
        // Timer
let timerId;
let timerRunning = false;
let timerCount = 0;

function startTimer() {
  if (!timerRunning) {
    timerId = setInterval(updateTimer, 1000);
    timerRunning = true;
  }
}

function pauseTimer() {
  clearInterval(timerId);
  timerRunning = false;
}

function resetTimer() {
  clearInterval(timerId);
  timerRunning = false;
  timerCount = 0;
  document.getElementById('timer').textContent = formatTime(timerCount);
}

function updateTimer() {
  timerCount++;
  document.getElementById('timer').textContent = formatTime(timerCount);
}

// Stopwatch
let stopwatchId;
let stopwatchRunning = false;
let stopwatchCount = 0;

function startStopwatch() {
  if (!stopwatchRunning) {
    stopwatchId = setInterval(updateStopwatch, 1000);
    stopwatchRunning = true;
  }
}

function pauseStopwatch() {
  clearInterval(stopwatchId);
  stopwatchRunning = false;
}

function resetStopwatch() {
  clearInterval(stopwatchId);
  stopwatchRunning = false;
  stopwatchCount = 0;
  document.getElementById('stopwatch').textContent = formatTime(stopwatchCount);
}

function updateStopwatch() {
  stopwatchCount++;
  document.getElementById('stopwatch').textContent = formatTime(stopwatchCount);
}

function formatTime(time) {
  let hours = Math.floor(time / 3600);
  let minutes = Math.floor((time % 3600) / 60);
  let seconds = time % 60;

  return `${padZero(hours)}:${padZero(minutes)}:${padZero(seconds)}`;
}

function padZero(number) {
  return number.toString().padStart(2, '0');
}

// Event listeners
document.getElementById('startTimer').addEventListener('click', startTimer);
document.getElementById('pauseTimer').addEventListener('click', pauseTimer);
document.getElementById('resetTimer').addEventListener('click', resetTimer);

document.getElementById('startStopwatch').addEventListener('click', startStopwatch);
document.getElementById('pauseStopwatch').addEventListener('click', pauseStopwatch);
document.getElementById('resetStopwatch').addEventListener('click', resetStopwatch);

      </script>
</body>
</html>



<!DOCTYPE html>
<html>
<head>
  <title>Unit Converter</title>
  <style>
    body{
        background-color: #ccc;
    }
    .converter {
      margin: 20px;
      padding: 20px;
      border: 2px solid #ea0404;
      width: 300px;
    }

    label {
      display: block;
      margin-bottom: 10px;
    }

    input[type="number"] {
      width: 96%;
      padding: 5px;
    }

    select {
      width: 100%;
      padding: 5px;
    }

    button {
      margin-top: 10px;
      padding: 5px 10px;
      background-color: aquamarine;
    }
    button:hover{
        background-color: rgb(30, 156, 8);
    }
    h2{
        background-color: #f73939;
        border-radius: 15px;
        padding: 10px;
    }
  </style>
</head>
<body><center>
  <div class="converter">
    <h2>Unit Converter</h2>
    <label>Value:</label>
    <input type="number" id="valueInput">
    <label>From:</label>
    <select id="fromUnitSelect">
      <option value="mm">Millimeter (mm)</option>
      <option value="cm">Centimeter (cm)</option>
      <option value="m">Meter (m)</option>
      <option value="km">Kilometer (km)</option>
      <option value="in">Inch (in)</option>
      <option value="ft">Foot (ft)</option>
      <option value="yd">Yard (yd)</option>
      <option value="mi">Mile (mi)</option>
    </select>
    <label>To:</label>
    <select id="toUnitSelect">
      <option value="mm">Millimeter (mm)</option>
      <option value="cm">Centimeter (cm)</option>
      <option value="m">Meter (m)</option>
      <option value="km">Kilometer (km)</option>
      <option value="in">Inch (in)</option>
      <option value="ft">Foot (ft)</option>
      <option value="yd">Yard (yd)</option>
      <option value="mi">Mile (mi)</option>
    </select>
    <button onclick="convert()">Convert</button>
    <h3 id="result"></h3>
  </div>

  <script>
    function convert() {
      var value = parseFloat(document.getElementById('valueInput').value);
      var fromUnit = document.getElementById('fromUnitSelect').value;
      var toUnit = document.getElementById('toUnitSelect').value;

      var conversionTable = {
        'mm': 0.001,
        'cm': 0.01,
        'm': 1.0,
        'km': 1000.0,
        'in': 0.0254,
        'ft': 0.3048,
        'yd': 0.9144,
        'mi': 1609.34
      };

      if (isNaN(value)) {
        alert('Please enter a valid number.');
        return;
      }

      if (!(fromUnit in conversionTable) || !(toUnit in conversionTable)) {
        alert('Invalid units.');
        return;
      }

      var meters = value * conversionTable[fromUnit];
      var result = meters / conversionTable[toUnit];
      result=result.toFixed(2);

      document.getElementById('result').innerHTML = 'Result: '+value + ' ' + fromUnit + ' is equal to ' + result + ' ' + toUnit;
    }
  </script>
  </center>
</body>
</html>
